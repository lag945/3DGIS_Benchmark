<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <title>Intro to SceneLayer | Sample | ArcGIS API for JavaScript 4.20</title>
    <style>
      html,
      body,
      #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
      }
	  
      #performanceInfo {
        background-color: rgba(255, 255, 255, 0.9);
        padding: 1em;
      }

      table {
        margin: 1em 0;
      }

      .center {
        text-align: center;
      }	  
    </style>

    <link rel="stylesheet" href="https://js.arcgis.com/4.20/esri/themes/light/main.css" />
    <script src="https://js.arcgis.com/4.20/"></script>

    <script>
	
	require(["esri/Map", "esri/views/SceneView", "esri/layers/SceneLayer", "esri/layers/ElevationLayer", "esri/config"], (Map, SceneView, SceneLayer, ElevationLayer, esriConfig) => {
	// Create Map
	const map = new Map({
	  basemap: "osm"
	  //ground: "world-elevation"
	});
		
	// Create the SceneView
	const view = new SceneView({
	  container: "viewDiv",
	  map: map,
	  camera: {
		position: [121.5476849751472, 25.026531010212537, 5000],
		tilt: 0,
		heading: 0
	  },
	  //qualityProfile: "high"
	});
	
	function addI3SLayer(map, url) {
		// Create SceneLayer and add to the map
		const sceneLayer = new SceneLayer({
			url: url,
			popupEnabled: true
		});
		map.add(sceneLayer);
	}		
	
		addI3SLayer(map, "https://i3s.nlsc.gov.tw/building/i3s/SceneServer/layers/0");
		
        view.when(() => {
          view.ui.add("performanceInfo", "bottom-left");
          updatePerformanceInfo();
        });

        const updatePerformanceInfo = () => {
          const performanceInfo = view.performanceInfo;
          updateMemoryTitle(performanceInfo.usedMemory, performanceInfo.totalMemory, performanceInfo.quality);
          updateTables(performanceInfo);
          setTimeout(updatePerformanceInfo, 1000);
        };		
		
 function updateMemoryTitle(used, total, quality) {
          const title = document.getElementById("title");
          title.innerHTML = `Memory: ${getMB(used)}MB/${getMB(total)}MB  -  Quality: ${Math.round(100 * quality)} %`;
        }

        function updateTables(stats) {
          const tableMemoryContainer = document.getElementById("memory");
          const tableCountContainer = document.getElementById("count");
          tableMemoryContainer.innerHTML = `<tr>
            <th>Resource</th>
            <th>Memory(MB)</th>
          </tr>`;
          for (layerInfo of stats.layerPerformanceInfos) {
            const row = document.createElement("tr");
            row.innerHTML = `<td>${layerInfo.layer.title}</td><td class="center">${getMB(layerInfo.memory)}</td>`;
            tableMemoryContainer.appendChild(row);
          }

          tableCountContainer.innerHTML = `<tr>
            <th>Layer - Features</th>
            <th>Displayed / Max<br>(count)</th>
            <th>Total<br>(count)</th>
          </tr>`;

          for (layerInfo of stats.layerPerformanceInfos) {
            if (layerInfo.maximumNumberOfFeatures) {
              const row = document.createElement("tr");
              row.innerHTML = `<td>${layerInfo.layer.title}`;
              row.innerHTML += `<td class="center">${
                layerInfo.displayedNumberOfFeatures ? layerInfo.displayedNumberOfFeatures : "-"
              } / ${layerInfo.maximumNumberOfFeatures ? layerInfo.maximumNumberOfFeatures : "-"}</td>`;
              row.innerHTML += `<td class="center">${
                layerInfo.totalNumberOfFeatures ? layerInfo.totalNumberOfFeatures : "-"
              }</td>`;
              tableCountContainer.appendChild(row);
            }
          }
        }

        function getMB(bytes) {
          const kilobyte = 1024;
          const megabyte = kilobyte * 1024;
          return Math.round(bytes / megabyte);
        }		
		
		
	});

	
    </script>
  </head>

  <body>
    <div id="viewDiv">
      <div id="performanceInfo">
        <h4 id="title"></h4>
        <table id="memory"></table>
        <table id="count"></table>
      </div>
    </div>
  </body>
</html>